{"version":3,"sources":["components/Chart.js","api.js","App.js","serviceWorker.js","index.js"],"names":["StockChart","props","symbol","data","groupingUnits","ohlc","MA5","MA20","VOL5","VOL20","volume","K1","map","item","index","push","dayjs","date","valueOf","open","high","low","close","Volcolor","lastIndex","x","y","color","K5","K20","options","chart","height","legend","enabled","align","verticalAlign","rangeSelector","selected","title","useHTML","text","style","fontSize","yAxis","labels","lineWidth","resize","top","offset","tooltip","split","series","name","type","dataGrouping","units","turboThreshold","Number","MAX_VALUE","credits","length","highcharts","Highcharts","constructorType","axios","create","baseURL","Search","Input","App","useState","isfetch","sesIsfetch","sesSymbol","setdata","fetchData","a","items","error","alert","console","log","Loading","position","left","backgroundColor","opacity","width","display","justifyContent","alignItems","size","tip","useEffect","padding","placeholder","onSearch","value","enterButton","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.256997f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport dayjs from 'dayjs'\r\nimport './Chart.css'\r\n\r\nexport default function StockChart (props) {\r\n  const { symbol, data } = props\r\n  const groupingUnits = [[\r\n            'week',                         // unit name\r\n            [1]                             // allowed multiples\r\n        ], [\r\n            'month',\r\n            [1, 2, 3, 4, 6]\r\n        ]]\r\n\r\n  const ohlc = []\r\n  const MA5 = []\r\n  const MA20 = [] \r\n  const VOL5 = []\r\n  const VOL20 = []\r\n  const volume  = []\r\n  \r\n  data.K1.map( (item, index) => {\r\n      ohlc.push([\r\n        dayjs(item.date).valueOf(), // the date\r\n        item.open, // open\r\n        item.high, // high\r\n        item.low, // low\r\n        item.close// close\r\n      ])\r\n      \r\n      let Volcolor = '#000'\r\n      const lastIndex = index === 0 ? index : index - 1\r\n\r\n      if (item.close > data.K1[lastIndex].close && index !== 0) {\r\n        Volcolor = 'red'\r\n      }\r\n      else if (item.close < data.K1[lastIndex].close && index !== 0) {\r\n        Volcolor = 'green'\r\n      }\r\n      \r\n      volume.push({\r\n        x: dayjs(item.date).valueOf(), // the date\r\n        y: item.volume,\r\n        color: Volcolor\r\n      })\r\n  })\r\n\r\n  data.K5.map( item => {\r\n    MA5.push([\r\n      dayjs(item.date).valueOf(), // the date\r\n      item.close // open\r\n    ])\r\n    VOL5.push([\r\n      dayjs(item.date).valueOf(), // the date\r\n      item.volume/5,\r\n    ])\r\n  })\r\n\r\n  data.K20.map( item => {\r\n    MA20.push([\r\n      dayjs(item.date).valueOf(), // the date\r\n      item.close // open\r\n    ])\r\n    VOL20.push([\r\n      dayjs(item.date).valueOf(), // the date\r\n      item.volume/20,\r\n    ])\r\n  })\r\n\r\n\r\n  const options = {\r\n    chart: {\r\n      height: '700px'\r\n    },\r\n    legend: {\r\n      enabled: true,\r\n      align: 'left',\r\n      verticalAlign: 'top',\r\n    },\r\n    rangeSelector: {\r\n      selected: 1\r\n    },\r\n    title: {\r\n      useHTML: true,\r\n      text: symbol,\r\n      style: {fontSize: '3vw'}\r\n    },\r\n    yAxis: [\r\n      {\r\n        labels: {\r\n          align: 'right',\r\n          x: -3\r\n        },\r\n        title: {\r\n          text: 'OHLC'\r\n        },\r\n        height: '60%',\r\n        lineWidth: 2,\r\n        resize: {\r\n          enabled: true\r\n        }\r\n      },\r\n      {\r\n        labels: {\r\n          align: 'right',\r\n          x: -3\r\n        },\r\n        title: {\r\n            text: 'Volume'\r\n        },\r\n        top: '65%',\r\n        height: '35%',\r\n        offset: 0,\r\n        lineWidth: 2\r\n      }\r\n    ],\r\n    tooltip: {\r\n        split: true\r\n    },\r\n    series: [\r\n      {\r\n        name: 'MA5',\r\n        type: 'line',\r\n        data: MA5,\r\n        lineWidth: 1\r\n      },\r\n      {\r\n        name: 'MA20',\r\n        type: 'line',\r\n        data: MA20,\r\n        lineWidth: 1\r\n      },\r\n      {\r\n        type: 'candlestick',\r\n        name: symbol,\r\n        data: ohlc,\r\n        dataGrouping: {\r\n          enabled: false,\r\n          units: groupingUnits\r\n        },\r\n      }, \r\n      {\r\n        name: 'VOL5',\r\n        type: 'line',\r\n        data: VOL5,\r\n        yAxis: 1,\r\n        lineWidth: 1\r\n      },\r\n      {\r\n        name: 'VOL20',\r\n        type: 'line',\r\n        data: VOL20,\r\n        yAxis: 1,\r\n        lineWidth: 1\r\n      },\r\n      {\r\n        type: 'column',\r\n        name: 'Volume',\r\n        data: volume,\r\n        yAxis: 1,\r\n        turboThreshold: Number.MAX_VALUE,\r\n        dataGrouping: {\r\n          enabled: false,\r\n          units: groupingUnits\r\n        }\r\n      }\r\n    ],\r\n    credits: {\r\n      enabled: false\r\n    }\r\n  }\r\n\r\n  if (data.K1.length > 0) {\r\n    return (\r\n      <HighchartsReact\r\n        highcharts={Highcharts}\r\n        constructorType={'stockChart'}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <div>Please ipnut a symbol</div>\r\n  )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const baseURL = \"https://cors-anywhere.herokuapp.com/https://dfj.com.tw:10050/api/\";\r\n\r\n//基本\r\nconst request = axios.create({\r\n  baseURL: baseURL\r\n});\r\n\r\nexport const apiStock = data => request.get(\"/stock-historical-data/\" , { params: data })\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport StockChart from './components/Chart'\nimport { Input, Spin } from 'antd';\nimport { apiStock } from './api'\nimport 'antd/dist/antd.css';\nimport K1 from './K1'\nimport K5 from './K1'\nimport K20 from './K1'\nconst { Search } = Input;\n\nfunction App() {\n  const [isfetch, sesIsfetch] = useState(false)\n  const [symbol, sesSymbol] = useState('')\n  const [data, setdata] = useState({ K1: [], K5:[], K20:[] })\n\n  const fetchData = async (symbol) => {\n    sesIsfetch(true)\n  \n    try {\n      /*\n      const resK1 = await apiStock({ symbol: symbol, time: 1 })\n      const resK5 = await apiStock({ symbol: symbol, time: 2 })\n      const resK20 = await apiStock({ symbol: symbol, time: 3 })\n      */\n      setdata({ \n        K1: K1.data.items, //resK1.data.data.items,\n        K5: K5.data.items, //resK5.data.data.items,\n        K20: K20.data.items //resK20.data.data.items \n      })\n      sesSymbol(symbol)\n      sesIsfetch(false)\n    } catch (error) {\n      sesIsfetch(false)\n      alert(`network error or symbol error ${symbol}`)\n      console.log(error)\n    }\n  }\n\n  function Loading (props) {\n    const { isfetch } =  props\n    if (isfetch){\n      return(\n        <div style={{\n          position: 'fixed',\n          top: '0px', \n          left: '0px', \n          backgroundColor: '#FFF',\n          opacity: 0.7,\n          height: '100%', \n          width: '100%', \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center'\n        }}>\n          <Spin size='large' tip=\"Loading...\" />\n        </div>\n      )\n    }\n    return(<div></div>)\n  }\n\n  useEffect(() => {\n    //fetchData(0)\n  }, [])\n  \n  return(\n    <div style={{padding: '2em', height: '99%'}}>\n      <Search placeholder=\"symbol\" onSearch={value => fetchData(value)} enterButton />\n      <StockChart symbol={symbol} data={data} />\n      <Loading isfetch={isfetch}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}